#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <11 12>;
        };

        middleClick {
            bindings = <&mkp MB3>;
            key-positions = <20 19>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <8 9>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <31 18>;
        };

        dot {
            bindings = <&kp DOT>;
            key-positions = <32 18>;
        };

        return {
            bindings = <&kp RETURN>;
            key-positions = <21 33>;
        };

        scroll {
            bindings = <&mo 5>;
            key-positions = <32 31>;
        };

        browserBack {
            bindings = <&mkp MB4>;
            key-positions = <29 31>;
        };

        nextClick {
            bindings = <&mkp MB5>;
            key-positions = <30 31>;
        };

        return2 {
            bindings = <&kp RETURN>;
            key-positions = <9 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        rdp_switch: rdp_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LALT>,
                <&macro_pause_for_release>,
                <&macro_tap>,
                <&kp HOME>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LCTRL &kp LALT>;

            label = "RDP_SWITCH";
        };

        rdp_prev_desktop: rdp_prev_desktop {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LCTRL>,
                <&macro_pause_for_release>,
                <&macro_tap>,
                <&kp LEFT_ARROW>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LGUI &kp LCTRL>;
            label = "RDP_PREV_DESKTOP";
        };

        rdp_next_desktop: rdp_next_desktop {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LCTRL>,
                <&macro_pause_for_release>,
                <&macro_tap>,
                <&kp RIGHT_ARROW>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LGUI &kp LCTRL>;
            label = "RDP_NEXT_DESKTOP";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_win {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                        &kp T                                                                &kp Y                        &kp U  &mt INSERT I  &kp O      &mt LC(PRINTSCREEN) P
&mt LCTRL A       &kp S         &kp D         &kp F                        &kp G                   &trans                      &kp APOS         &kp H                        &kp J  &kp K         &kp L      &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp B                   &lt_to_layer_0 8 COLON      &kp GRAVE        &kp N                        &kp M  &mkp LCLK     &mkp RCLK  &mt LEFT_SHIFT MINUS
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 6 LANGUAGE_2  &lt_to_layer_0 2 SPACE  &kp LCTRL                   &lt 7 BACKSPACE  &lt_to_layer_0 3 LANGUAGE_1                                  &mt LCTRL SLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        default_iPad {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SYMBOLS {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp EXCLAMATION    &kp PERCENT  &kp AMPERSAND                      &kp SQT           &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans            &kp EQUAL
&kp AT           &kp SINGLE_QUOTE   &kp DOUBLE_QUOTES  &trans       &trans         &trans      &trans  &kp HASH          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp COLON
&trans           &trans             &trans             &trans       &trans         &trans      &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp LESS_THAN          &kp GREATER_THAN  &kp SEMI
&trans           &trans             &trans             &trans       &trans         &trans      &trans  &trans                                                                           &kp EXCLAMATION
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp LC(LG(D))  &kp LC(TAB)              &trans                       &trans         &kp PAGE_UP     &kp UP_ARROW            &kp PAGE_DOWN      &rdp_switch
&kp HOME        &kp LG(LS(LC(TAB)))     &kp LG(H)      &kp LG(TAB)              &kp END  &trans      &trans  &kp HOME       &kp LEFT_ARROW  &kp DOWN_ARROW          &kp RIGHT_ARROW    &kp END
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans         &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &kp BACKSPACE  &kp DEL         &rdp_prev_desktop      &rdp_next_desktop   &trans
&trans          &trans                  &trans         &trans                   &trans   &trans      &trans  &trans                                                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4  &mkp MB5  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &kp EQUAL  &trans  &kp TILDE                           &kp BACKSLASH  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS
&trans  &trans  &kp DOT    &trans  &trans     &trans      &kp PERCENT  &kp PIPE       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&trans  &trans  &trans     &trans  &trans     &trans      &kp CARET    &kp SLASH      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT
&trans  &trans  &trans     &trans  &trans     &trans      &trans       &kp NUMBER_0                                             &kp ASTRK
            >;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F7  &kp F8  &kp F9  &kp F12  &kp F13
&trans  &trans  &trans  &trans  &trans  &trans      &kp F10  &kp F4  &kp F5  &kp F6  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp F11  &kp F1  &kp F2  &kp F3  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                           &trans
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
